#!/usr/bin/env bash
set -o errexit -o nounset -o pipefail

# Initialize a new container from base image and capture the image ID
img="$(./bocker init ~/base-image | awk '{print $2}')"
echo "DEBUG: Created image: $img"

sleep 5

# Check if the image exists in the image list
echo "DEBUG: Checking if image exists in image list..."
./bocker images | grep -qw "$img"
[[ "$?" == 0 ]]
echo "DEBUG: Image verification passed"

echo "# Installing procps-ng package..."
./bocker run "$img" yum install -y procps-ng
ps="$(./bocker ps | grep 'yum install -y procps-ng' | awk '{print $1}')"
echo "# Container ID for yum install: $ps"

./bocker commit "$ps" "$img"
echo "# Committed changes to image $img"

# ▼ ▼ ▼ Race condition waiting to happen ▼ ▼ ▼
./bocker run "$img" "sleep 5 && ps aux" &
sleep 2
ps="$(./bocker ps | grep 'sleep 5' | awk '{print $1}')"
exec="$(./bocker exec "$ps" ps aux | wc -l)"
echo "DEBUG: ps aux output has $exec lines (expecting 4)"
[[ "$exec" == "4" ]]
sleep 3
# ▲ ▲ ▲ Race condition waiting to happen ▲ ▲ ▲

./bocker run "$img" ps aux
ps="$(./bocker ps | grep 'ps aux' | awk '{print $1}')"
exec="$(./bocker exec "$ps" ps aux)" || true
[[ "$exec" == "Container '$ps' exists but is not running" ]]

exec="$(./bocker exec foo ps aux)" || true
[[ "$exec" == "No container named 'foo' exists" ]]
